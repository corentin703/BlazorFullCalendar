@inherits CalendarPageBase
@inject IJSRuntime _jsRuntime

@page "/interactive"

<h3>MonthView (Array Source)</h3>

<FullCalendar settings="@calendarSettings" OnClickEvent="OnClickHandler" OnUpdateEvent="OnResizeHandler"/>

<br/>

<FullCalendar settings="@calendarSettings" OnClickEvent="OnClickHandler2" OnUpdateEvent="OnResizeHandler"/>

@code {
    public CalendarSettings calendarSettings { get; set; }

    private void OnClickHandler(CalendarEventChangeResponse response)
    {
        _jsRuntime.InvokeVoidAsync("alert", response.ToString());
    }

    private void OnClickHandler2(CalendarEventChangeResponse response)
    {
        _jsRuntime.InvokeVoidAsync("alert", "22 " + response.ToString());
    }

    private void OnResizeHandler(CalendarEventChangeResponse response)
    {
        _jsRuntime.InvokeVoidAsync("alert", "Changement !" + response.ToString());
    }

    protected override void OnInitialized()
    {
        calendarSettings = new CalendarSettings()
        {
            Plugins = new[] { CalendarPluginTypes.DayGrid, CalendarPluginTypes.Interaction, CalendarPluginTypes.Bootstrap },
            InitialView = "dayGridTwoMonths",
            timeZone = "UTC",
            Editable = true,
            headerToolbar  = new CalendarHeader()
            {
                left = "title",
                center = "",
                right = "dayGridOneWeek,dayGridTwoWeeks,dayGridTwoMonths today prev,next"
            },
            themeSystem = "bootstrap",
            views = new Dictionary<string, CalendarViewDefinition>()
            {
                { "dayGridOneWeek", CalendarViewDefinition.DayGridWeeks(1,"One Week") },
                { "dayGridTwoWeeks", CalendarViewDefinition.DayGridWeeks(2,"Two Weeks") },
                { "dayGridTwoMonths", CalendarViewDefinition.DayGridMonths(2,"Two Months") },
            },
            events = GetRandomEvents(50).ToArray()
        };
    }



}
